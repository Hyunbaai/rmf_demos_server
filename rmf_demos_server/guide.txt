=== rmf_server ===
cd ~/ws_server
. install/setup.bash

# fsm_waypoint_node

export CONFIG_FILE=/home/zeta/rmf_demos_server/rmf_demos/config/gl/gl_deliveryRobot_config.yaml && \
	colcon build --packages-select fsm_waypoint && \
	export ROS_DOMAIN_ID=14 && \
	ros2 run fsm_waypoint fsm_waypoint_node


# server
docker run \
   --network host \
   -it --rm \
   -e ROS_DOMAIN_ID=14 \
   -e RMW_IMPLEMENTATION=rmw_cyclonedds_cpp \
   ghcr.io/open-rmf/rmf-web/api-server:latest

docker run \
   --network host -it --rm \
   -e RMF_SERVER_URL=http://localhost:8000 \
   -e TRAJECTORY_SERVER_URL=ws://localhost:8006 \
   ghcr.io/open-rmf/rmf-web/dashboard:latest

# gl
export ROS_DOMAIN_ID=14 &&
ros2 launch rmf_demos gl.launch.xml \
  server_uri:="ws://localhost:8000/_internal" \
  use_sim_time:=False \
  headless:=False




# path restart
export ROS_DOMAIN_ID=14 &&
ros2 run rmf_visualization_schedule schedule_visualizer_node \
    --ros-args \
    -p use_sim_time:=false \
    -p rate:=10.0 \
    -p path_width:=0.2 \
    -p initial_map_name:=L1 \
    -p wait_secs:=10 \
    -p port:=8006 \
    -p retained_history_count:=50


# GIS
copy rviz_satellite
export ROS_DOMAIN_ID=14 && ros2 launch rviz_satellite demo.launch.xml

# patrol examples
export ROS_DOMAIN_ID=14 && ros2 run rmf_demos_tasks dispatch_patrol -F gl_robot -R tank_orange -p o00 o
export ROS_DOMAIN_ID=14 && ros2 run rmf_demos_tasks dispatch_patrol -F gl_robot -R steer_yellow -p y00 y


# visualization
copy rmf_visualization
export ROS_DOMAIN_ID=14 && colcon build --packages-select rmf_custom_obstacles &&  ros2 run rmf_custom_obstacles obstacle_publisher

# traffic_editor
copy rmf_traffic_editor
cd ~/ws_editor
. install/setup.badh
traffic_editor




=== rmf_robot ===
export ROS_DOMAIN_ID=8 &&
export TURTLEBOT3_MODEL=waffle &&
export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/opt/ros/iron/share/turtlebot3_gazebo/models &&
ros2 launch nav2_bringup tb3_simulation_launch.py headless:=False \
  x_pose:=0.01721 y_pose:=-0.5261 z_pose:=0.01 yaw:=0.0

export ROS_DOMAIN_ID=8 && ros2 launch rmf_demos_gz_classic office_simulation.launch.xml headless:=False
export ROS_DOMAIN_ID=8 && ros2 launch rmf_demos_gz_classic office_with_nav2.launch.py headless:=False
export ROS_DOMAIN_ID=8 && ros2 run fsm_waypoint fsm_waypoint_node

export ROS_DOMAIN_ID=8 && ros2 run teleop_twist_keyboard teleop_twist_keyboard

